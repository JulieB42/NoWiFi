//Code by Julie Barrett, but highly based on the following:
/*
  Rui Santos & Sara Santos - Random Nerd Tutorials
  Complete project details at https://RandomNerdTutorials.com/esp-now-esp32-arduino-ide/
  Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files.
  The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
*/
//I used an Adafruit QT PY ESP32 S3 with no PSRAM for this part of the project.

#include <esp_now.h>
#include <WiFi.h>
#include <Adafruit_NeoPixel.h>

// How many internal neopixels do we have? some boards have more than one!
#define NUMPIXELS 50
#define PIN_NEOPIXEL  A1
uint32_t color;
Adafruit_NeoPixel pixels(NUMPIXELS, PIN_NEOPIXEL, NEO_GRB+ NEO_KHZ800);

// Structure example to receive data
// Must match the sender structure
typedef struct struct_message {

 uint32_t color;
} struct_message;

// Create a struct_message called myData
struct_message myData;

// callback function that will be executed when data is received
void OnDataRecv(const uint8_t * mac, const uint8_t *incomingData, int len) {
  memcpy(&myData, incomingData, sizeof(myData));
  Serial.print("Bytes received: ");
 
  Serial.println();
  Serial.print("Color: ");
  Serial.println(myData.color);
  Serial.println();
}

void setup() {
  // Initialize Serial Monitor
  Serial.begin(115200);

  // Set device as a Wi-Fi Station
  WiFi.mode(WIFI_STA);

  // Init ESP-NOW
  if (esp_now_init() != ESP_OK) {
    Serial.println("Error initializing ESP-NOW");
    return;
  }

  // Once ESPNow is successfully Init, we will register for recv CB to
  // get recv packer info
  esp_now_register_recv_cb(esp_now_recv_cb_t(OnDataRecv));

#if defined(NEOPIXEL_POWER)
  // If this board has a power control pin, we must set it to output and high
  // in order to enable the NeoPixels. We put this in an #if defined so it can
  // be reused for other boards without compilation errors
  pinMode(NEOPIXEL_POWER, OUTPUT);
  digitalWrite(NEOPIXEL_POWER, HIGH);
#endif

  pixels.begin(); // INITIALIZE NeoPixel strip object (REQUIRED)
  pixels.setBrightness(150); // not so bright
  

}

String scolor="myData.color";
 void sparks(const char* colorName)
 {
  //Random sparks - one LED at a time!
  Serial.printf("sparks: %s\n", scolor);
 Serial.printf("scolor: " , scolor);
 uint8_t i;
    i = random(NUMPIXELS);
    pixels.setPixelColor(i, myData.color);
    pixels.show();
    delay(200);
    pixels.setPixelColor(i, 0);
 }

void loop() {
pixels.clear();
sparks(scolor.c_str());
color=(myData.color);

//If you don't want to do the sparsk and just want to do a plain fill, comment out the two lines above and uncomment the two lines below.
 //pixels.fill(myData.color);
 //pixels.show();
}
